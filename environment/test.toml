# Test Environment Configuration
# This configuration is used during unit testing
# 
# IMPORTANT: All API keys and secrets are DUMMY values for testing only
# Tests should NEVER make actual API calls - everything is mocked
# 
# Optimized for:
# - Fast execution
# - Complete isolation
# - No external dependencies
# - No network access
# - CI/CD friendly

[app]
name = "ragtrial-app-test"
version = "1.0.0"
environment = "test"

[embeddings]
provider = "google"  # Default for tests (will be mocked)
dimension = 768

[embeddings.google]
model = "text-embedding-004"
api_key = "test-google-api-key-dummy"  # Dummy key - tests are mocked
verify_ssl = false  # Disabled for tests

[embeddings.openai]
model = "text-embedding-3-small"
api_key = "test-openai-api-key-dummy"  # Dummy key - tests are mocked
batch_size = 100
dimensions = 1536
verify_ssl = false  # Disabled for tests

[embeddings.huggingface]
model_name = "sentence-transformers/all-MiniLM-L6-v2"
cache_folder = "./models/huggingface_test"  # Separate test cache
device = "cpu"

[embeddings.anthropic]
model = "voyage-2"
api_key = "test-voyage-api-key-dummy"  # Dummy key - tests are mocked
verify_ssl = false  # Disabled for tests

[vectorstore]
provider = "chroma"  # Default for tests
collection_name = "test_collection"  # Test-specific collection name

[vectorstore.chroma]
persist_directory = "./storage/chroma_test"  # Separate test storage
collection_name = "test_collection"

[vectorstore.pinecone]
api_key = "test-pinecone-api-key-dummy"  # Dummy key - tests are mocked
environment = "test-env"
index_name = "test-index"
verify_ssl = false  # Disabled for tests

[vectorstore.qdrant]
url = "http://localhost:6333"
collection_name = "test_collection"
api_key = "test-qdrant-api-key-dummy"  # Dummy key - tests are mocked

[vectorstore.weaviate]
url = "http://localhost:8080"
class_name = "TestDocument"
api_key = "test-weaviate-api-key-dummy"  # Dummy key - tests are mocked

[logging]
level = "WARNING"  # Reduce noise during tests
format = "json"

# Storage Backend Configuration (Test)
[storage]
backend = "local"
max_file_size_mb = 100
allowed_extensions = [".pdf", ".txt", ".md", ".csv", ".docx", ".json"]

# Local Storage settings
[storage.local]
path = "storage/test_documents"
create_if_missing = true

# S3 Storage settings (for testing)
[storage.s3]
bucket_name = "test-rag-documents"
region = "us-east-1"
use_explicit_credentials = true
access_key_id = "test"
secret_access_key = "test"
endpoint_url = ""
use_localstack = false
role_arn = ""
role_session_name = "test-session"

# API Configuration (Test)
[api]
host = "127.0.0.1"
port = 8001
cors_origins = ["*"]
upload_chunk_size = 1048576

# ============================================================================
# DATABASE CONFIGURATION (TEST ENVIRONMENT)
# ============================================================================

[database]
driver = "sqlite"                # Use SQLite for tests (fast, isolated)
pool_pre_ping = false            # Not needed for SQLite
pool_recycle = -1                # Disable for tests
connect_timeout = 5              # Shorter timeout for tests

# SQLite Configuration (Test)
[database.sqlite.write]
path = "storage/test.db"         # File-based database for tests (shared connection)
debug = false                    # Disable query logging in tests (reduce noise)

[database.sqlite.read]
path = "storage/test.db"         # File-based database for tests (shared connection)
debug = false                    # Disable query logging in tests (reduce noise)

# MySQL Configuration (Test - mocked, dummy values)
[database.mysql.write]
host = "localhost"
port = 3306
database = "test_ragtrial"
username = "test_user"
password = "test_password"
charset = "utf8mb4"
pool_size = 1                    # Minimal pool for tests
max_overflow = 1
debug = false

[database.mysql.read]
host = "localhost"
port = 3306
database = "test_ragtrial"
username = "test_readonly"
password = "test_password"
charset = "utf8mb4"
pool_size = 1
max_overflow = 1
debug = false

# PostgreSQL Configuration (Test - mocked, dummy values)
[database.postgresql.write]
host = "localhost"
port = 5432
database = "test_ragtrial"
username = "test_user"
password = "test_password"
schema = "public"
pool_size = 1                    # Minimal pool for tests
max_overflow = 1
debug = false

[database.postgresql.read]
host = "localhost"
port = 5432
database = "test_ragtrial"
username = "test_readonly"
password = "test_password"
schema = "public"
pool_size = 1
max_overflow = 1
debug = false

