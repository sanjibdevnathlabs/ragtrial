name: Docker Build & Push

on:
  push:
    branches:
      - master
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

# Cancel in-progress runs when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE: sanjibdevnath/ragtrial

jobs:
  docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Wait for base image
        run: |
          echo "‚è≥ Waiting for base image: sanjibdevnath/ragtrial-base:${{ github.sha }}"
          echo "The base-image workflow should build this automatically"
          
          # Wait up to 10 minutes for base image to be available
          for i in {1..60}; do
            if docker manifest inspect sanjibdevnath/ragtrial-base:${{ github.sha }} > /dev/null 2>&1; then
              echo "‚úÖ Base image found!"
              break
            fi
            if [ $i -eq 60 ]; then
              echo "‚ùå Base image not found after 10 minutes"
              echo "üí° The base-image workflow may still be building it"
              exit 1
            fi
            echo "‚è≥ Attempt $i/60: Base image not ready yet, waiting 10s..."
            sleep 10
          done
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          # For PRs: build only linux/amd64 (faster)
          # For master/develop: build linux/amd64,linux/arm64 (multi-platform)
          platforms: ${{ github.event_name == 'pull_request' && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Pass base image tag (commit SHA) to Dockerfile
          build-args: |
            BASE_IMAGE_TAG=${{ github.sha }}
          cache-from: type=gha
          # For PRs: use min mode (faster, only cache final image)
          # For push: use max mode (cache all layers for better reuse)
          cache-to: type=gha,mode=${{ github.event_name == 'pull_request' && 'min' || 'max' }}
      
      - name: Update Docker Hub description
        if: github.ref == 'refs/heads/master'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKER_IMAGE }}
          readme-filepath: ./README.md

  scan:
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

