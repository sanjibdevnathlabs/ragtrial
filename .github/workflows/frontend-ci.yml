name: Frontend CI

on:
  push:
    branches:
      - master
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

# Cancel in-progress runs when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # =============================================================================
  # Frontend Build & Quality Checks
  # =============================================================================
  frontend-build:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      
      - name: Check build output
        run: |
          if [ ! -d "app/static/dist" ]; then
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi
          if [ ! -f "app/static/dist/index.html" ]; then
            echo "‚ùå Build failed - index.html not found"
            exit 1
          fi
          echo "‚úÖ Frontend build successful!"
          echo ""
          echo "üì¶ Build artifacts:"
          ls -lh app/static/dist/assets/ | head -20
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: app/static/dist/
          retention-days: 7

  frontend-lint:
    name: Lint Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Run ESLint
        working-directory: frontend
        run: npm run lint
        continue-on-error: true
      
      - name: Run TypeScript type check
        working-directory: frontend
        run: npx tsc --noEmit
        continue-on-error: true

  frontend-security:
    name: Frontend Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Run npm audit
        working-directory: frontend
        run: |
          npm audit --audit-level=moderate --json > npm-audit-report.json || true
          echo "üìä Security audit complete"
          cat npm-audit-report.json | jq '.metadata'
        continue-on-error: true
      
      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-security-report
          path: frontend/npm-audit-report.json
          retention-days: 30

  bundle-size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    needs: frontend-build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: app/static/dist/
      
      - name: Check bundle sizes
        run: |
          echo "üì¶ Bundle Size Report"
          echo "===================="
          echo ""
          
          # Check main bundle
          MAIN_SIZE=$(du -sh app/static/dist/assets/index-*.js | cut -f1)
          echo "Main bundle: $MAIN_SIZE"
          
          # Check vendor bundle
          VENDOR_SIZE=$(du -sh app/static/dist/assets/react-vendor-*.js | cut -f1)
          echo "React vendor: $VENDOR_SIZE"
          
          # Check total size
          TOTAL_SIZE=$(du -sh app/static/dist/ | cut -f1)
          echo "Total dist: $TOTAL_SIZE"
          
          echo ""
          echo "üìä Detailed breakdown:"
          ls -lh app/static/dist/assets/*.js | awk '{print $5, $9}'
          
          # Warning if main bundle > 100KB
          MAIN_KB=$(du -k app/static/dist/assets/index-*.js | cut -f1)
          if [ $MAIN_KB -gt 100 ]; then
            echo ""
            echo "‚ö†Ô∏è  Warning: Main bundle is larger than 100KB"
          fi

  # =============================================================================
  # E2E Tests (Optional - requires running server)
  # =============================================================================
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: frontend-build
    if: false  # Disabled for now - enable when E2E tests are ready
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Playwright
        working-directory: frontend
        run: |
          npm ci
          npx playwright install --with-deps chromium
      
      - name: Run E2E tests
        working-directory: frontend
        run: npm run test:e2e
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

